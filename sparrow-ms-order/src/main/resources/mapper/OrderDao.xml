<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ly817.sparrow.order.dao.OrderDao">
  <resultMap id="BaseResultMap" type="org.ly817.sparrow.api.pojo.Order">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="pay_serial_id" jdbcType="VARCHAR" property="paySerialId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="order_sts" jdbcType="INTEGER" property="orderSts" />
    <result column="pay_sts" jdbcType="INTEGER" property="paySts" />
    <result column="shipping_sts" jdbcType="INTEGER" property="shippingSts" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_number" jdbcType="INTEGER" property="productNumber" />
    <result column="product_price" jdbcType="DECIMAL" property="productPrice" />
    <result column="product_amount" jdbcType="DECIMAL" property="productAmount" />
    <result column="shipping_fee" jdbcType="DECIMAL" property="shippingFee" />
    <result column="order_amount" jdbcType="DECIMAL" property="orderAmount" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="coupon_paid" jdbcType="DECIMAL" property="couponPaid" />
    <result column="money_paid" jdbcType="DECIMAL" property="moneyPaid" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, pay_serial_id, user_id, `number`, amount, order_sts, pay_sts, shipping_sts, 
    address, consignee, product_id, product_number, product_price, product_amount, shipping_fee, 
    order_amount, coupon_id, coupon_paid, money_paid, pay_amount, create_time, confirm_time, 
    pay_time
  </sql>
  <select id="selectByExample" parameterType="org.ly817.sparrow.api.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `order`
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.ly817.sparrow.api.pojo.OrderExample">
    delete from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="order_id" keyProperty="orderId" parameterType="org.ly817.sparrow.api.pojo.Order">
    insert into `order` (order_id, pay_serial_id, user_id, `number`,
      amount, order_sts, pay_sts,
      shipping_sts, address, consignee,
      product_id, product_number, product_price,
      product_amount, shipping_fee, order_amount,
      coupon_id, coupon_paid, money_paid,
      pay_amount, create_time, confirm_time,
      pay_time)
    values (#{orderId,jdbcType=BIGINT}, #{paySerialId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{number,jdbcType=INTEGER},
      #{amount,jdbcType=DOUBLE}, #{orderSts,jdbcType=INTEGER}, #{paySts,jdbcType=INTEGER}, 
      #{shippingSts,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, 
      #{productId,jdbcType=BIGINT}, #{productNumber,jdbcType=INTEGER}, #{productPrice,jdbcType=DECIMAL}, 
      #{productAmount,jdbcType=DECIMAL}, #{shippingFee,jdbcType=DECIMAL}, #{orderAmount,jdbcType=DECIMAL}, 
      #{couponId,jdbcType=BIGINT}, #{couponPaid,jdbcType=DECIMAL}, #{moneyPaid,jdbcType=DECIMAL}, 
      #{payAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="order_id" keyProperty="orderId" parameterType="org.ly817.sparrow.api.pojo.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="paySerialId != null">
        pay_serial_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="orderSts != null">
        order_sts,
      </if>
      <if test="paySts != null">
        pay_sts,
      </if>
      <if test="shippingSts != null">
        shipping_sts,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productNumber != null">
        product_number,
      </if>
      <if test="productPrice != null">
        product_price,
      </if>
      <if test="productAmount != null">
        product_amount,
      </if>
      <if test="shippingFee != null">
        shipping_fee,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponPaid != null">
        coupon_paid,
      </if>
      <if test="moneyPaid != null">
        money_paid,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paySerialId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="paySerialId != null">
        #{paySerialId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="orderSts != null">
        #{orderSts,jdbcType=INTEGER},
      </if>
      <if test="paySts != null">
        #{paySts,jdbcType=INTEGER},
      </if>
      <if test="shippingSts != null">
        #{shippingSts,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productNumber != null">
        #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null">
        #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="productAmount != null">
        #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="shippingFee != null">
        #{shippingFee,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponPaid != null">
        #{couponPaid,jdbcType=DECIMAL},
      </if>
      <if test="moneyPaid != null">
        #{moneyPaid,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ly817.sparrow.api.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.paySerialId != null">
        pay_serial_id = #{record.paySerialId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.orderSts != null">
        order_sts = #{record.orderSts,jdbcType=INTEGER},
      </if>
      <if test="record.paySts != null">
        pay_sts = #{record.paySts,jdbcType=INTEGER},
      </if>
      <if test="record.shippingSts != null">
        shipping_sts = #{record.shippingSts,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productNumber != null">
        product_number = #{record.productNumber,jdbcType=INTEGER},
      </if>
      <if test="record.productPrice != null">
        product_price = #{record.productPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.productAmount != null">
        product_amount = #{record.productAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.shippingFee != null">
        shipping_fee = #{record.shippingFee,jdbcType=DECIMAL},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.couponPaid != null">
        coupon_paid = #{record.couponPaid,jdbcType=DECIMAL},
      </if>
      <if test="record.moneyPaid != null">
        money_paid = #{record.moneyPaid,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confirmTime != null">
        confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `order`
    set order_id = #{record.orderId,jdbcType=BIGINT},
      pay_serial_id = #{record.paySerialId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      `number` = #{record.number,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      order_sts = #{record.orderSts,jdbcType=INTEGER},
      pay_sts = #{record.paySts,jdbcType=INTEGER},
      shipping_sts = #{record.shippingSts,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=BIGINT},
      product_number = #{record.productNumber,jdbcType=INTEGER},
      product_price = #{record.productPrice,jdbcType=DECIMAL},
      product_amount = #{record.productAmount,jdbcType=DECIMAL},
      shipping_fee = #{record.shippingFee,jdbcType=DECIMAL},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      coupon_paid = #{record.couponPaid,jdbcType=DECIMAL},
      money_paid = #{record.moneyPaid,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      confirm_time = #{record.confirmTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ly817.sparrow.api.pojo.Order">
    update `order`
    <set>
      <if test="paySerialId != null">
        pay_serial_id = #{paySerialId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="orderSts != null">
        order_sts = #{orderSts,jdbcType=INTEGER},
      </if>
      <if test="paySts != null">
        pay_sts = #{paySts,jdbcType=INTEGER},
      </if>
      <if test="shippingSts != null">
        shipping_sts = #{shippingSts,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productNumber != null">
        product_number = #{productNumber,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null">
        product_price = #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="productAmount != null">
        product_amount = #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="shippingFee != null">
        shipping_fee = #{shippingFee,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponPaid != null">
        coupon_paid = #{couponPaid,jdbcType=DECIMAL},
      </if>
      <if test="moneyPaid != null">
        money_paid = #{moneyPaid,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ly817.sparrow.api.pojo.Order">
    update `order`
    set pay_serial_id = #{paySerialId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      `number` = #{number,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      order_sts = #{orderSts,jdbcType=INTEGER},
      pay_sts = #{paySts,jdbcType=INTEGER},
      shipping_sts = #{shippingSts,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      consignee = #{consignee,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      product_number = #{productNumber,jdbcType=INTEGER},
      product_price = #{productPrice,jdbcType=DECIMAL},
      product_amount = #{productAmount,jdbcType=DECIMAL},
      shipping_fee = #{shippingFee,jdbcType=DECIMAL},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      coupon_id = #{couponId,jdbcType=BIGINT},
      coupon_paid = #{couponPaid,jdbcType=DECIMAL},
      money_paid = #{moneyPaid,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      confirm_time = #{confirmTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>